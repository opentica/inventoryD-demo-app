version: "3.7"


services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  mysql-standalone: 
    image: 'mysql/mysql-server:5.7'
    environment:
      MYSQL_DATABASE: 'inventoryDB'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'opentica'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
  inventory-java-app:
      container_name: inventoryservice
      build: ./inventoryservice/
      ports:
        - "8080:8080"
      env_file:
        - ./.env
      volumes:
        - /var/log/optimiz:/var/log
  paymentservice-java-app:
      container_name: paymentservice
      build: ./paymentservice/
      ports:
        - "50821:50821"
      env_file:
        - ./.env
      volumes:
        - /var/log/optimiz:/var/log
  purchaseservice-java-app:
      container_name: purchaseservice
      build: ./purchaseservice/
      ports:
        - "50822:50822"
      env_file:
        - ./.env
      depends_on:
      - paymentservice-java-app
      volumes:
        - /var/log/optimiz:/var/log
  productservice-java-app:
      container_name: productservice
      build: ./productservice/
      ports:
        - "50832:50832"
      env_file:
        - ./.env
      volumes:
        - /var/log/optimiz:/var/log
  customerservice-java-app:
      container_name: customerservice
      build: ./customerservice/
      ports:
        - "50831:50831"
      env_file:
        - ./.env
      volumes:
        - /var/log/optimiz:/var/log
